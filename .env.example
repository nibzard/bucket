# =============================================================================
# BUCKET - Environment Configuration
# =============================================================================
# Copy this file to .env.local and fill in your actual values
# Never commit .env.local to version control!

# =============================================================================
# FILE UPLOAD SERVICE (UploadThing)
# =============================================================================
# Get your token from: https://uploadthing.com/dashboard
# 1. Create an account at UploadThing
# 2. Create a new app
# 3. Copy the token from your app's API Keys section
UPLOADTHING_TOKEN=your-uploadthing-token-here

# =============================================================================
# AUTHENTICATION (NextAuth.js)
# =============================================================================
# For production, set this to your actual domain (e.g., https://mybucket.com)
# For development, keep as localhost:3000
NEXTAUTH_URL=http://localhost:3000

# Generate a secure secret with: openssl rand -base64 32
# This is used to encrypt JWT tokens - keep it secret!
NEXTAUTH_SECRET=your-secret-key-change-this-in-production

# =============================================================================
# GITHUB OAUTH (Optional - for GitHub login)
# =============================================================================
# If you want GitHub login, create a GitHub OAuth App:
# 1. Go to GitHub Settings > Developer settings > OAuth Apps
# 2. Click "New OAuth App"
# 3. Set Authorization callback URL to: http://localhost:3000/api/auth/callback/github
# 4. Copy the Client ID and Client Secret here
# GITHUB_ID=your-github-client-id
# GITHUB_SECRET=your-github-client-secret

# =============================================================================
# ADMIN CREDENTIALS (Username/Password login)
# =============================================================================
# These are used for simple username/password authentication
# Choose strong credentials for production!
ADMIN_USERNAME=admin
ADMIN_PASSWORD=password123

# =============================================================================
# DATABASE (Turso - Edge SQLite)
# =============================================================================
# Get these from: https://turso.tech/
# 1. Create a Turso account
# 2. Create a new database
# 3. Copy the database URL and auth token
# 
# For local development, you can use a local SQLite file:
# TURSO_DATABASE_URL=file:./dev.db
# TURSO_AUTH_TOKEN=
#
# For production, use your Turso credentials:
TURSO_DATABASE_URL=libsql://your-database-name.turso.io
TURSO_AUTH_TOKEN=your-turso-auth-token

# =============================================================================
# OPTIONAL: DEBUG & MONITORING
# =============================================================================
# Enable enhanced logging and performance monitoring
# DEBUG_MODE=true

# =============================================================================
# DATABASE CONNECTION POOL SETTINGS
# =============================================================================
# Maximum number of concurrent database connections (default: 50)
# DB_CONCURRENCY_LIMIT=50

# Database synchronization interval in milliseconds (default: 60000 = 1 minute)
# Only applies when using embedded replicas
# DB_SYNC_INTERVAL=60000

# =============================================================================
# SECURITY NOTES
# =============================================================================
# - Never commit this file to version control
# - Use strong passwords and secrets in production
# - Rotate your secrets regularly
# - Consider using environment-specific secrets managers for production